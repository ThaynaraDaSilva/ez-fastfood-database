name: DB Infrastructure

on:
  push:
    branches:
      - main
      - chore/refactor-db-terraform

env: # Global environment variables
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
  TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
  TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  

jobs:
  Validate:
    name: Validate terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Initialize terraform
        run: terraform init

      - name: Validate terraform
        run: terraform validate
  
  Plan:
    name: Plan terraform changes
    runs-on: ubuntu-latest
    needs: Validate

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Initialize terraform
      run: terraform init

    - name: Terraform plan
      id: plan
      run: terraform plan -refresh=false -out=tfplan

    - name: Upload plan artifact
      uses: actions/upload-artifact@v3
      with:
        name: tfplan
        path: tfplan
  Apply:
    name: Apply terraform changes
    runs-on: ubuntu-latest
    needs: Plan
    # if:: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Download plan artifact
      uses: actions/download-artifact@v3
      with:
        name: tfplan

    - name: Set up terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Terraform tpply
      run: terraform apply -auto-approve tfplan
